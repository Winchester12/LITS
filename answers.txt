Functions:

	1. 'foo' is not a function. Ми декларуємо функцію пізніше, оскільки JS є однопоточною, то вона не бачить функцію.

	2. Те ж що і в першому, але якщо ми трішки змінимо код і поставимо декларацію функції перед викликом, то всерівно 
		код не працюватиме, бо 'foo' в нас змінна з інтовим значенням.

	3. Поверне "undefined", бо ми нічого не повертаємо. Щоб повернути правильне значення потрібно написати "return x*y*z;"

	4. 'console.log(x);' поверне 5, бо х=5 в нас глобальна змінна.
	   'console.log(foo(8));' поверне -1, бо 8-9=-1, х=9 в нас локальна і ми бачимо її тільки в функції.

	5. Перший консоль лог виведе 1, потім ми змінимо(а не створимо нову змінну) х і наступного разу виведемо 5. P.S. ти забув виклик функції foo написати:)
Lock:

	1. 1) Результат функції lock - в нас буде 8*y.
	   2) Результата ф-ї locked - 8*4 = 32.
	   3) Ні, не зміниться результат тому, що ми вже передали в функцію "а = 8" і тільки після цього змінили змінну "а"

	2. Перше виведемо 6, це очевидно.
	   Вдруге виведемо 6, оскільки в JS ми можемо передавати скільки хочемо параметрів(тобто (2, 3, 4)) у функцію і вона братиме стільки, скільки вказано в описі функції.
	   Втретє виведемо NaN(Not a Number), бо ми не передали b. P.S. Якщо чесно, я думав, що виведе undefined, оскільки ми взагалі нічого не передали, тобто за замовчуванням b мало б бути undefined.
	*. ...



De Pirate:  1) Після твого коду я додав 3 стрічки:
		person.name = pirate.name;
		person.surname = pirate.surname;
		person.greet("Hello");

	    2) swearByKid = function(){
		pirate.name = kid.name;
		pirate.surname = kid.surname;
		pirate.swear();	
	       };

Практичні завдання:


1.
--------------------------------------------
factorial = function(number){
let sum = 1;
if(number <= 0){
	console.log("Bad number!");
}
else{
 for(var i = number; i >= 1; i--){
	sum*=i;	
	}
	return sum;
}
};
console.log(factorial(5));
--------------------------------------------
2.
--------------------------------------------
var f0=1
var f1=1
var f2=f0+f1
for(var i=0; i < 10; i++){
  f0=f1;
  f1=f2;
  f2=f0+f1;
  console.log(f2);
}
--------------------------------------------
3.
--------------------------------------------
var f = function(n) { 
	if (n == 2) 
		return true; 
	if ((n != 0) && (n % 2 == 0)) { 
		return f(n / 2); 
	} 
	else { 
		return false; 
	} 
}
console.log(f(16));
console.log(f(15));
--------------------------------------------
4.
--------------------------------------------
var count = 0;
var f = function(n){
	if(n>=1){
		if(n/10<1){
			count+=n;
			console.log(count);
		}
		else{
			count+=n%10;
			return 	f(Math.floor(n/=10));
		}
	}
	else{
		return console.log("Wrong number!");
	}	
}
f(645);
---------------------------------------------------
**
1.
---------------------------------------------------

function add(a) { 
	let b = 5;
	return a + b;
}  
console.log(add(4));
---------------------------------------------------
2.
---------------------------------------------------
function add(a) { let b = 5;return a + b;}    
function multiply(a) { let b = 4;return a * b; }

var add = add(4);
var multiply = multiply(4);
function compose(add, multiply){
	return function(a){
		return add+multiply;
		}
	
}
var addAndMultiply = compose(add, multiply);  
console.log(addAndMultiply(4)); // => 25  